{"ast":null,"code":"\"use strict\";\n\nmodule.exports = DocumentFragment;\nvar Node = require('./Node');\nvar NodeList = require('./NodeList');\nvar ContainerNode = require('./ContainerNode');\nvar Element = require('./Element');\nvar select = require('./select');\nvar utils = require('./utils');\nfunction DocumentFragment(doc) {\n  ContainerNode.call(this);\n  this.nodeType = Node.DOCUMENT_FRAGMENT_NODE;\n  this.ownerDocument = doc;\n}\nDocumentFragment.prototype = Object.create(ContainerNode.prototype, {\n  nodeName: {\n    value: '#document-fragment'\n  },\n  nodeValue: {\n    get: function () {\n      return null;\n    },\n    set: function () {}\n  },\n  // Copy the text content getter/setter from Element\n  textContent: Object.getOwnPropertyDescriptor(Element.prototype, 'textContent'),\n  querySelector: {\n    value: function (selector) {\n      // implement in terms of querySelectorAll\n      var nodes = this.querySelectorAll(selector);\n      return nodes.length ? nodes[0] : null;\n    }\n  },\n  querySelectorAll: {\n    value: function (selector) {\n      // create a context\n      var context = Object.create(this);\n      // add some methods to the context for zest implementation, without\n      // adding them to the public DocumentFragment API\n      context.isHTML = true; // in HTML namespace (case-insensitive match)\n      context.getElementsByTagName = Element.prototype.getElementsByTagName;\n      context.nextElement = Object.getOwnPropertyDescriptor(Element.prototype, 'firstElementChild').get;\n      // invoke zest\n      var nodes = select(selector, context);\n      return nodes.item ? nodes : new NodeList(nodes);\n    }\n  },\n  // Utility methods\n  clone: {\n    value: function clone() {\n      return new DocumentFragment(this.ownerDocument);\n    }\n  },\n  isEqual: {\n    value: function isEqual(n) {\n      // Any two document fragments are shallowly equal.\n      // Node.isEqualNode() will test their children for equality\n      return true;\n    }\n  },\n  // Non-standard, but useful (github issue #73)\n  innerHTML: {\n    get: function () {\n      return this.serialize();\n    },\n    set: utils.nyi\n  },\n  outerHTML: {\n    get: function () {\n      return this.serialize();\n    },\n    set: utils.nyi\n  }\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}