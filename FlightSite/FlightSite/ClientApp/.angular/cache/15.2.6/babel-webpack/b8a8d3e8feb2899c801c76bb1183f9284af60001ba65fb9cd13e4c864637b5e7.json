{"ast":null,"code":"\"use strict\";\n\nvar UIEvent = require('./UIEvent');\nmodule.exports = MouseEvent;\nfunction MouseEvent() {\n  // Just use the superclass constructor to initialize\n  UIEvent.call(this);\n  this.screenX = this.screenY = this.clientX = this.clientY = 0;\n  this.ctrlKey = this.altKey = this.shiftKey = this.metaKey = false;\n  this.button = 0;\n  this.buttons = 1;\n  this.relatedTarget = null;\n}\nMouseEvent.prototype = Object.create(UIEvent.prototype, {\n  constructor: {\n    value: MouseEvent\n  },\n  initMouseEvent: {\n    value: function (type, bubbles, cancelable, view, detail, screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget) {\n      this.initEvent(type, bubbles, cancelable, view, detail);\n      this.screenX = screenX;\n      this.screenY = screenY;\n      this.clientX = clientX;\n      this.clientY = clientY;\n      this.ctrlKey = ctrlKey;\n      this.altKey = altKey;\n      this.shiftKey = shiftKey;\n      this.metaKey = metaKey;\n      this.button = button;\n      switch (button) {\n        case 0:\n          this.buttons = 1;\n          break;\n        case 1:\n          this.buttons = 4;\n          break;\n        case 2:\n          this.buttons = 2;\n          break;\n        default:\n          this.buttons = 0;\n          break;\n      }\n      this.relatedTarget = relatedTarget;\n    }\n  },\n  getModifierState: {\n    value: function (key) {\n      switch (key) {\n        case \"Alt\":\n          return this.altKey;\n        case \"Control\":\n          return this.ctrlKey;\n        case \"Shift\":\n          return this.shiftKey;\n        case \"Meta\":\n          return this.metaKey;\n        default:\n          return false;\n      }\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}