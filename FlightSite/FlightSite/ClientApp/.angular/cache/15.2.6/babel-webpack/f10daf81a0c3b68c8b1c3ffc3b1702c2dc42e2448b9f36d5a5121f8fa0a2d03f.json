{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { FlightService } from './../api/services/flight.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../api/services/flight.service\";\nexport let BookFlightComponent = /*#__PURE__*/(() => {\n  class BookFlightComponent {\n    constructor(route, router, flightService) {\n      this.route = route;\n      this.router = router;\n      this.flightService = flightService;\n      this.flightId = 'not loaded';\n      this.flight = {};\n      this.findFlight = flightId => {\n        this.flightId = flightId !== null && flightId !== void 0 ? flightId : 'not passed';\n        this.flightService.findFlight({\n          id: this.flightId\n        }).subscribe(flight => this.flight = flight, this.handleError);\n      };\n      this.handleError = err => {\n        if (err.status == 404) {\n          alert(\"Search not found\");\n          this.router.navigate(['/search-flights']);\n        }\n        console.log(\"Response Error Status: \", err.status);\n        console.log(\"Response Text: \", err.statusText);\n        console.log(err);\n      };\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(p => this.findFlight(p.get(\"flightId\")));\n    }\n  }\n  BookFlightComponent.ɵfac = function BookFlightComponent_Factory(t) {\n    return new (t || BookFlightComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FlightService));\n  };\n  BookFlightComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookFlightComponent,\n    selectors: [[\"app-book-flight\"]],\n    decls: 0,\n    vars: 0,\n    template: function BookFlightComponent_Template(rf, ctx) {}\n  });\n  return BookFlightComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}